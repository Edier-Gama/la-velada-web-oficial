---
import BoxerBigImage from "@/components/BoxerBigImage.astro"
import BoxerWorkout from "@/components/BoxerWorkout.astro"
import BoxerClips from "@/components/BoxerClips.astro"
import BoxerDetailInfo from "@/components/BoxerDetailInfo.astro"
import BoxerSocialLink from "@/components/BoxerSocialLink.astro"
import SectionTitle from "@/components/SectionTitle.astro"
import Typography from "@/components/Typography.astro"

import Instagram from "@/icons/instagram.astro"
import Tiktok from "@/icons/tiktok.astro"
import Twitch from "@/icons/twitch.astro"
import X from "@/icons/x.astro"
import YouTube from "@/icons/youtube.astro"

import { BOXERS } from "@/consts/boxers"
import type { Boxer } from "@/types/Boxer"
import { COMBATS } from "@/consts/combats"
import { FORECASTS } from "@/consts/forecasts"
import Layout from "@/layouts/Layout.astro"
import CombatSection from "@/sections/Combat.astro"
import Forecasts, { type BoxerWithForecast } from "@/sections/Forecasts.astro"
import type { Preload } from "@/components/SEO.astro"

export function getStaticPaths() {
	return BOXERS.map(({ id }) => {
		return { params: { id } }
	})
}

const { id } = Astro.params

const [boxer] = BOXERS.filter((boxer) => boxer.id === id)

const combat = COMBATS.find((combat) => combat.boxers.includes(id))

if (!combat) {
	return new Response(JSON.stringify("Combat not found"), { status: 404 })
}

const boxers = BOXERS.filter((boxer) => combat.boxers.includes(boxer.id))

if (!boxers) {
	return new Response(JSON.stringify("Boxers not found"), { status: 404 })
}

const forecast = FORECASTS.find((forecast) => forecast.combatId === combat.id)

const boxersWithForecast: BoxerWithForecast[] = []
let forecastCount = 0

let rivals: Boxer[] = []
if (typeof boxer.versus === "object") {
	for (const vs of boxer.versus) {
		rivals = rivals.concat(BOXERS.filter((rival: Boxer) => rival.id === vs))
	}
} else {
	rivals = boxers.filter((rival: Boxer) => rival.id !== boxer.id)
}

if (forecast) {
	forecast.forecastData.forEach((forecastData) => {
		const boxer = boxers.find((boxer) => boxer.id === forecastData.boxerId)
		if (boxer) {
			boxersWithForecast.push({ ...boxer, forecast: forecastData.forecast })
			forecastCount += forecastData.predictionsCount
		}
	})
}

const preloadBoxerImage: Preload[] = [
	{
		as: "image",
		href: `/img/boxers/${id}-big.avif`,
		type: "image/avif",
		rel: "preload",
	},
]

const rivalOrRivals = rivals.length > 1 ? "Rivales" : "Rival"
const guardBoxer = boxer.guard === undefined ? "Desconocida" : boxer.guard
const reachBoxer = boxer.reach === undefined ? "Desconocido" : boxer.reach
---

<Layout
	description={`Informaci칩n del luchador ${boxer.name}`}
	title={`${boxer.name} - Informaci칩n del boxeador de La Velada IV`}
	preload={preloadBoxerImage}
>
<main>
	<section class="w-full">
		<section class="flex flex-wrap items-center justify-center">
			<div
				class="relative -mt-20 flex flex-col items-center justify-center md:order-2 md:w-1/2 lg:mx-4"
			>
				<BoxerBigImage id={id} name={boxer.name} country={boxer.country} />
			</div>
			<div class="mt-20 flex flex-col items-center justify-center">
				<Typography as="h1" variant="atomic-title" color="primary">Datos b치sicos</Typography>
				<div class="m-5 flex flex-wrap">
					<BoxerDetailInfo title="Edad" value={boxer.age} id="boxer-edad" />
					<BoxerDetailInfo title="Peso" value={`${boxer.weight} kg.`} id="boxer-peso" />
					<BoxerDetailInfo title="Altura" value={`${boxer.height} m.`} id="boxer-altura" />
				</div>
				<div class="m-5">
					<Typography as="h1" variant="atomic-title" color="primary">Redes</Typography>
				</div>
				<div class="m-auto flex max-w-md flex-col items-center justify-center">
					<div class="flex w-96 flex-wrap justify-center gap-2 md:max-w-full">
						<BoxerSocialLink href={boxer.socials.twitch}>
							<Twitch />
						</BoxerSocialLink>
						<BoxerSocialLink href={boxer.socials.instagram}>
							<Instagram />
						</BoxerSocialLink>
						<BoxerSocialLink href={boxer.socials.twitter}>
							<X />
						</BoxerSocialLink>
						<BoxerSocialLink href={boxer.socials.youtube}>
							<YouTube />
						</BoxerSocialLink>
						<BoxerSocialLink href={boxer.socials.tiktok}>
							<Tiktok />
						</BoxerSocialLink>
					</div>
				</div>
			</div>
		</section>
	</section>

	{
		boxer.workout && (
			<section class="my-44">
				<SectionTitle title="Entrenamiento" description="Preparaci칩n para el combate" />

				<BoxerWorkout workout={boxer.workout} />
			</section>
		)
	}
	{
		boxer.clips && boxer.clips.length > 0 && (
			<section class="my-44">
				<SectionTitle title="Declaraciones" description="Citas previas del combate" />

				<BoxerClips clips={boxer.clips} />
			</section>
		)
	}
	{forecast && <Forecasts count={forecastCount} boxers={boxersWithForecast} />}
	<CombatSection combatId={combat.id} combatNumber={combat.number} boxers={boxers} />
</main>
</Layout>

<script></script>
